//////////////////////////////////////////////////////////////////////////////
// Product: PC-Lint 9.x options for linting QP/C applications, GNU-ARM
// Last Updated for Version: 5.9.7
// Date of the Last Update:  2017-08-31
//
//                    Q u a n t u m     L e a P s
//                    ---------------------------
//                    innovating embedded systems
//
// Copyright (C) Quantum Leaps, LLC. All rights reserved.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Alternatively, this program may be distributed and modified under the
// terms of Quantum Leaps commercial licenses, which expressly supersede
// the GNU General Public License and are specifically designed for
// licensees interested in retaining the proprietary status of their code.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.
//
// Contact information:
// http://www.state-machine.com
// mailto:info@state-machine.com
//////////////////////////////////////////////////////////////////////////////

// NOTE:
// The following code requires the definition of the QTOOLS environment
// variable, which must point to the installation directory of QTools on
// your machine (e.g. C:\qp\qtools )

// the location of the GNU-ARM includes (need to adjust!!!)
-i%QTOOLS%\gnu_arm-eabi\arm-eabi\include

// define ARM Architecture
-D__ARM_ARCH=7

// the location of the QTools lint directory (need to adjust!!!)
-i%QTOOLS%\lint

// the location of the QPC framework (need to adjust!!!)
-i..\..\..\..\include                 // QP/C includes
-i..\..\..\..\ports\arm-cm\qk\gnu     // QP/C port includes
-i..\..\..\..\3rd_party\CMSIS\Include // CMSIS directory

co-gnu-arm.lnt                // GNU-ARM compiler
au-misra2.lnt                 // MISRA-C:2004 rules
au-ds.lnt                     // Dan Saks recommendations
qpc.lnt                       // QP/C options
//-strong(AXJ)                  // Strong type checking

// library headers
-wlib(1)                      // ignore warnings from library headers
+libclass(angle)              // consider only <...> headers as library
//-vf                           // print names of all header & source files

-emacro(923, UINT2PTR_CAST)   // cast from unsigned int to pointer
-emacro(946, PHILO_ID)        // MISRA04-17.2(req), subtraction of pointers
-emacro(947, PHILO_ID)        // MISRA04-17.2(req), subtraction of pointers
-emacro(960, PHILO_ID)        // MISRA04-17.4(req), pointer arithmetic
-estring(961,                 // MISRA04-19.7(adv) Function-like macro
 QF_SET_BASEPRI,
 PHILO_ID,
 RIGHT,
 LEFT)
-esym(960,                    // MISRA04-19.4(req), disallowed macro definition
 QF_SET_BASEPRI,
 THINK_TIME,
 EAT_TIME)
-emacro(717,                  // do ... while(0);
 QK_ISR_ENTRY,
 QK_ISR_EXIT)
-esym(522, Q_onAssert)        // Highest operation, function lacks side-effects

// not referenced symbols
-e714                         // symbol '...' not referenced
-e755                         // global macro '...' not referenced
-e756                         // global typedef '...' not referenced
-e757                         // global declarator '...' not referenced
-e768                         // struct member '...' not referenced
