<?xml version="1.0" encoding="UTF-8"?>
<package name="Comp" stereotype="0x02">
 <class name="Philo" superclass="qpc::QHsm">
  <attribute name="timeEvt" type="CompTimeEvt" visibility="0x02" properties="0x00"/>
  <operation name="ctor" type="void" visibility="0x00" properties="0x00">
   <code>QHsm_ctor(&amp;me-&gt;super, Q_STATE_CAST(&amp;Philo_initial));
CompTimeEvt_ctor(&amp;me-&gt;timeEvt, AO_Table, &amp;me-&gt;super, TIMEOUT_SIG, 0U);</code>
  </operation>
  <statechart>
   <initial target="../1">
    <action>static uint8_t registered = (uint8_t)0; /* starts off with 0, per C-standard */
(void)e; /* suppress the compiler warning about unused parameter */
if (registered == (uint8_t)0) {
    registered = (uint8_t)1;
    QS_FUN_DICTIONARY(&amp;Philo_initial);
    QS_FUN_DICTIONARY(&amp;Philo_thinking);
    QS_FUN_DICTIONARY(&amp;Philo_hungry);
    QS_FUN_DICTIONARY(&amp;Philo_eating);
}</action>
    <initial_glyph conn="2,4,5,1,20,5,-2">
     <action box="0,-2,6,2"/>
    </initial_glyph>
   </initial>
   <state name="thinking">
    <entry>QTimeEvt_armX(&amp;me-&gt;timeEvt.super, THINK_TIME, 0U);</entry>
    <exit>QTimeEvt_disarm(&amp;me-&gt;timeEvt.super);</exit>
    <tran trig="TIMEOUT" target="../../2">
     <tran_glyph conn="2,16,3,1,20,10,-2">
      <action box="0,-2,9,2"/>
     </tran_glyph>
    </tran>
    <tran trig="TEST">
     <tran_glyph conn="2,20,3,-1,13">
      <action box="0,-2,11,4"/>
     </tran_glyph>
    </tran>
    <state_glyph node="2,6,18,16">
     <entry box="1,2,5,2"/>
     <exit box="1,4,6,2"/>
    </state_glyph>
   </state>
   <state name="hungry">
    <entry>/* asynchronously post event to the Container */
TableEvt *pe = Q_NEW(TableEvt, HUNGRY_SIG);
pe-&gt;philo = me;
QACTIVE_POST_LIFO(AO_Table, &amp;pe-&gt;super);</entry>
    <tran trig="EAT" target="../../3">
     <tran_glyph conn="2,31,3,1,20,11,-2">
      <action box="0,-2,14,2"/>
     </tran_glyph>
    </tran>
    <state_glyph node="2,24,18,14">
     <entry box="1,2,5,2"/>
    </state_glyph>
   </state>
   <state name="eating">
    <entry>QTimeEvt_armX(&amp;me-&gt;timeEvt.super, EAT_TIME, 0U);</entry>
    <exit>QTimeEvt_disarm(&amp;me-&gt;timeEvt.super);

/* asynchronously post event to the Container */
TableEvt *pe = Q_NEW(TableEvt, DONE_SIG);
pe-&gt;philo = me;
QACTIVE_POST_LIFO(AO_Table, &amp;pe-&gt;super);</exit>
    <tran trig="TIMEOUT" target="../../1">
     <tran_glyph conn="2,50,3,1,22,-39,-4">
      <action box="0,-2,10,2"/>
     </tran_glyph>
    </tran>
    <state_glyph node="2,40,18,14">
     <entry box="1,2,5,2"/>
     <exit box="1,4,5,2"/>
    </state_glyph>
   </state>
   <state_diagram size="28,56"/>
  </statechart>
 </class>
 <directory name=".">
  <file name="philo.c">
   <text>#include &quot;qpc.h&quot;
#include &quot;dpp.h&quot;
#include &quot;bsp.h&quot;

Q_DEFINE_THIS_FILE

/* helper macros to provide a randomized think time for Philos */
#define THINK_TIME  \
    (QTimeEvtCtr)((BSP_random() % BSP_TICKS_PER_SEC) + (BSP_TICKS_PER_SEC/2U))
#define EAT_TIME    \
    (QTimeEvtCtr)((BSP_random() % BSP_TICKS_PER_SEC) + BSP_TICKS_PER_SEC)

/* Philo definition --------------------------------------------------------*/
$define(Comp::Philo)</text>
  </file>
 </directory>
</package>
